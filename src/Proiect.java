
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.MalformedURLException;
import java.net.URL;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.List;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JWindow;
import javax.swing.SwingConstants;
import javax.swing.Timer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author dorel
 */
public class Proiect extends javax.swing.JFrame {

    //Codul de inregistrare pentru a intra in modul full este : java
    public DefaultListModel<Contact> contacte = new DefaultListModel<>();
    private DefaultComboBoxModel filtru = new DefaultComboBoxModel(CriteriuFiltrare.values());
    private DefaultComboBoxModel ordonare = new DefaultComboBoxModel(CriteriuOrdonare.values());
    private String alege = "Alege...";
    private List<Contact> persoane = new ArrayList<>();
    private Comparator<Contact> dupaNume = (o1, o2) -> o1.getNume().compareTo(o2.getNume());
    private Comparator<Contact> dupaPrenume = (o1, o2) -> o1.getPrenume().compareTo(o2.getPrenume());
    private Comparator<Contact> dupaData = (o1, o2) -> o1.getData().compareTo(o2.getData());
    private Comparator<Contact> dupaNumar = (o1, o2) -> o1.getTel().compareTo(o2.getTel());
    private String filtrul = "";
    //  Agenda agenda = new Agenda();
    String date = new SimpleDateFormat("dd.MM.yyyy").format(new Date());
    LocalDate ld = LocalDate.now();
    int ziCurenta = ld.getDayOfMonth();
    int lunaCurenta = ld.getMonthValue();
    String[] pozee = {"Reclama/1.jpg", //0
        "Reclama/2.jpg", //1
        "Reclama/3.jpg", //2
        "Reclama/4.jpg" //3
};
    Timer tm, save;
    int pozaCurenta = 0;

    public void Reclame(int i) {
        ImageIcon reclama = new ImageIcon(getClass().getResource(pozee[i]));
        Image reclamaSize = reclama.getImage();
        Image reclamaSized = reclamaSize.getScaledInstance(lPic.getWidth(), lPic.getHeight(), Image.SCALE_SMOOTH); // re-size imagine cat label
        ImageIcon recll = new ImageIcon(reclamaSized);
        lPic.setIcon(recll);
    }

    public Proiect()  {
        initComponents();
        System.out.println(date);
        setSize(700, 300);
        Lista.setModel(contacte);
        filtru.insertElementAt(alege, 0);
        filtru.setSelectedItem(alege);
        cmbFiltru.setModel(filtru);
        ordonare.insertElementAt(alege, 0);
        ordonare.setSelectedItem(alege);
        cmbOrdonare.setModel(ordonare);
        miRegister1.setVisible(false);
        Reclame(3);
        tm = new Timer(2000, (ActionEvent ae) -> {
            Reclame(pozaCurenta);
            pozaCurenta += 1;
            if (pozaCurenta >= pozee.length) {
                pozaCurenta = 0;
            }
        });
        save = new Timer(60000, (ActionEvent ae) -> {
            File d = new File(chooser.toString());
            File f = chooser.getSelectedFile();
            try {
                FileOutputStream fileOut = new FileOutputStream(f);
                ObjectOutputStream objOut = new ObjectOutputStream(fileOut);
                objOut.writeObject(persoane);
                objOut.close();
                fileOut.close();
                //    JOptionPane.showMessageDialog(this, "Fisierul a fost salvat in: " + saveFile.getAbsolutePath());
                System.out.println("Fisierul a fost salvat");
            } catch (IOException | NullPointerException ex) {
                Logger.getLogger(Proiect.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
        tm.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Full = new javax.swing.JFrame();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Lista = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();
        btnAdauga = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        cmbFiltru = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        tfFiltru = new javax.swing.JTextField();
        bFiltru = new javax.swing.JButton();
        cmbOrdonare = new javax.swing.JComboBox<>();
        btnOrdoneaza = new javax.swing.JButton();
        btnEdite = new javax.swing.JButton();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        miOpen = new javax.swing.JMenuItem();
        miSave = new javax.swing.JMenuItem();
        miExit = new javax.swing.JMenuItem();
        register = new javax.swing.JMenu();
        miRegister1 = new javax.swing.JMenuItem();
        miAbout = new javax.swing.JMenuItem();
        adauga = new javax.swing.JFrame();
        tfNume = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tfPrenume = new javax.swing.JTextField();
        jData = new javax.swing.JLabel();
        tfData = new javax.swing.JTextField();
        Adauga = new javax.swing.JButton();
        tfTel = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cbFix = new javax.swing.JRadioButton();
        cbMobil = new javax.swing.JRadioButton();
        btnEditt = new javax.swing.JButton();
        chooser = new javax.swing.JFileChooser();
        jScrollPane2 = new javax.swing.JScrollPane();
        lPic = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        miIesire = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        miRegister = new javax.swing.JMenuItem();

        Full.setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Filtrare");

        jScrollPane1.setViewportView(Lista);

        jLabel2.setText("Ordonare");

        btnAdauga.setText("Adauga Contact");
        btnAdauga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdaugaActionPerformed(evt);
            }
        });

        btnRemove.setText("Sterge contact slectat");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        cmbFiltru.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "" }));

        jLabel7.setText("Filtru");

        tfFiltru.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfFiltruActionPerformed(evt);
            }
        });
        tfFiltru.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfFiltruKeyPressed(evt);
            }
        });

        bFiltru.setText("Filtreaza");
        bFiltru.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bFiltruActionPerformed(evt);
            }
        });

        btnOrdoneaza.setText("Ordoneaza");
        btnOrdoneaza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrdoneazaActionPerformed(evt);
            }
        });

        btnEdite.setText("Editeaza Contact Selectat");
        btnEdite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditeActionPerformed(evt);
            }
        });

        jMenu3.setText("Fisiere");

        miOpen.setText("Deschidere");
        miOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miOpenActionPerformed(evt);
            }
        });
        jMenu3.add(miOpen);

        miSave.setText("Salvare");
        miSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miSaveActionPerformed(evt);
            }
        });
        jMenu3.add(miSave);

        miExit.setText("Iesire");
        miExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miExitActionPerformed(evt);
            }
        });
        jMenu3.add(miExit);

        jMenuBar2.add(jMenu3);

        register.setText("Ajutor");

        miRegister1.setText("Inregistrare");
        miRegister1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miRegister1ActionPerformed(evt);
            }
        });
        register.add(miRegister1);

        miAbout.setText("Despre");
        miAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miAboutActionPerformed(evt);
            }
        });
        register.add(miAbout);

        jMenuBar2.add(register);

        Full.setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout FullLayout = new javax.swing.GroupLayout(Full.getContentPane());
        Full.getContentPane().setLayout(FullLayout);
        FullLayout.setHorizontalGroup(
            FullLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(FullLayout.createSequentialGroup()
                .addComponent(btnAdauga)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRemove)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnEdite))
            .addGroup(FullLayout.createSequentialGroup()
                .addGroup(FullLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(FullLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(22, 22, 22)
                        .addComponent(cmbFiltru, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfFiltru, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(FullLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbOrdonare, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(FullLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnOrdoneaza)
                    .addComponent(bFiltru, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        FullLayout.setVerticalGroup(
            FullLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FullLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(FullLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FullLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(cmbFiltru, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(FullLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tfFiltru, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)
                        .addComponent(bFiltru)))
                .addGap(13, 13, 13)
                .addGroup(FullLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmbOrdonare, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnOrdoneaza))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(FullLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdauga)
                    .addComponent(btnRemove)
                    .addComponent(btnEdite))
                .addContainerGap())
        );

        jLabel3.setText("Nume");

        jLabel4.setText("Prenume");

        jData.setText("Data Nastere");

        Adauga.setText("Adauga");
        Adauga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdaugaActionPerformed(evt);
            }
        });

        jLabel6.setText("Numar Telefon");

        cbFix.setText("nrFix");
        cbFix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbFixActionPerformed(evt);
            }
        });

        cbMobil.setText("nrMobil");
        cbMobil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMobilActionPerformed(evt);
            }
        });

        btnEditt.setText("Editeaza");
        btnEditt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEdittActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout adaugaLayout = new javax.swing.GroupLayout(adauga.getContentPane());
        adauga.getContentPane().setLayout(adaugaLayout);
        adaugaLayout.setHorizontalGroup(
            adaugaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adaugaLayout.createSequentialGroup()
                .addGroup(adaugaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(adaugaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfTel, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(adaugaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(adaugaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addGap(33, 33, 33)
                        .addGroup(adaugaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfNume, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfPrenume, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(adaugaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(adaugaLayout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(Adauga)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnEditt))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, adaugaLayout.createSequentialGroup()
                            .addGap(106, 106, 106)
                            .addComponent(cbFix)
                            .addGap(32, 32, 32)
                            .addComponent(cbMobil)))
                    .addGroup(adaugaLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jData)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfData, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(89, Short.MAX_VALUE))
        );
        adaugaLayout.setVerticalGroup(
            adaugaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adaugaLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(adaugaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tfNume, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(adaugaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tfPrenume, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(adaugaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jData)
                    .addComponent(tfData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(adaugaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(tfTel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(adaugaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbFix)
                    .addComponent(cbMobil))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(adaugaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Adauga)
                    .addComponent(btnEditt))
                .addContainerGap(46, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane2.setViewportView(lPic);

        jMenu1.setText("File");

        miIesire.setText("Iesire");
        miIesire.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miIesireActionPerformed(evt);
            }
        });
        jMenu1.add(miIesire);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Ajutor");

        miRegister.setText("Inregistrare");
        miRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miRegisterActionPerformed(evt);
            }
        });
        jMenu2.add(miRegister);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 458, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 79, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void miRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miRegisterActionPerformed

        String cod = JOptionPane.showInputDialog("Introduceti codul de inregistrare");
        if (!cod.equals("java")) {
            JOptionPane.showMessageDialog(this, "Cod incorect.Aplicatia se v-a inchide!");
            System.exit(0);
        } else {
            Full.setVisible(true);
            Full.setSize(500, 500);
            this.setVisible(false);

        }
    }//GEN-LAST:event_miRegisterActionPerformed

    private void btnAdaugaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdaugaActionPerformed
        adauga.setVisible(true);
        adauga.setSize(300, 300);
        Adauga.setVisible(true);
        btnEditt.setVisible(false);
        tfData.setVisible(true);
        jData.setVisible(true);
        refreshModel();
    }//GEN-LAST:event_btnAdaugaActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        int pozitie = Lista.getSelectedIndex();
        if (pozitie >= 0) {
            int reply = JOptionPane.showConfirmDialog(null, "Doriti sa stergeti contactul " + Lista.getSelectedValue(), "Sterge contact", JOptionPane.YES_NO_OPTION);
            if (reply == JOptionPane.YES_OPTION) {
                contacte.remove(pozitie);
                persoane.remove(pozitie);
            } else {
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selectati un contact");
        }
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void miOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miOpenActionPerformed
        int userSel = chooser.showOpenDialog(this);
        if (userSel == JFileChooser.APPROVE_OPTION) {
            File openFile = chooser.getSelectedFile();
            if (openFile.exists()) {
                try {
                    FileInputStream fileIn = new FileInputStream(openFile);
                    ObjectInputStream objIn = new ObjectInputStream(fileIn);
                    persoane = (List<Contact>) objIn.readObject();
                    actualizareModel();
                    for (int i = 0; i < persoane.size(); i++) {
                        String dataContact = persoane.get(i).getData();
                        String[] data = dataContact.split("\\.");
                        int ziContact = Integer.parseInt(data[0]);
                        int lunaContact = Integer.parseInt(data[1]);
                        if (ziCurenta == ziContact && lunaCurenta == lunaContact) {
                            JOptionPane.showMessageDialog(this, "Contactul " + contacte.get(i) + " isi serbeaza ziua azi");
                        } else {
                        }
                    }

                } catch (IOException | ClassNotFoundException | ClassCastException ex) {
                    Logger.getLogger(Proiect.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        /*  if (lunaa >= 1 && lunaa < 10) {
            String data = zii + "." + "0" + lunaa;
            System.out.println(data);
            if (persoane.contains(data)) {
                JOptionPane.showMessageDialog(this, "Contactul " + contacte.toString() + " isi serbeaza ziua de nastere azi");
                System.out.println(data);
            }
        } else if (lunaa >= 10 && lunaa <= 12) {
            String data = zii + "." + lunaa;
            if (persoane.contains(data)) {
                JOptionPane.showMessageDialog(this, "Contactul " + contacte.toString() + " isi serbeaza ziua de nastere azi");
            }
        } */
    }//GEN-LAST:event_miOpenActionPerformed

    private void miSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miSaveActionPerformed
        chooser.setDialogTitle("Alegeti fisierul in care salvati agenda...");
        int userSelect = chooser.showSaveDialog(this);
        if (userSelect == JFileChooser.APPROVE_OPTION) {
            File saveFile = chooser.getSelectedFile();
            try {
                FileOutputStream fileOut = new FileOutputStream(saveFile);
                ObjectOutputStream objOut = new ObjectOutputStream(fileOut);
                objOut.writeObject(persoane);
                objOut.close();
                fileOut.close();
                JOptionPane.showMessageDialog(this, "Fisierul a fost salvat in: " + saveFile.getAbsolutePath());
            } catch (IOException ex) {
                Logger.getLogger(Proiect.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        save.start();
    }//GEN-LAST:event_miSaveActionPerformed

    private void miExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miExitActionPerformed
        int iesire = JOptionPane.showConfirmDialog(null, "Doriti sa parasiti aplicatia", "Iesire", JOptionPane.YES_NO_OPTION);
        if (iesire == JOptionPane.YES_OPTION) {
            System.exit(0);
        } else {
        }
    }//GEN-LAST:event_miExitActionPerformed

    private void miRegister1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miRegister1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_miRegister1ActionPerformed

    private void miAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miAboutActionPerformed
        JOptionPane.showMessageDialog(this, "Ma numesc Lita Marius-Dorel,am 21 de ani si sunt student.Aplicatia a fost creata cu scopul de implementa o agenda telefonica si a fi cat la mai indemana.", "Informatii", JOptionPane.NO_OPTION);
    }//GEN-LAST:event_miAboutActionPerformed

    private void AdaugaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdaugaActionPerformed
        String numee = tfNume.getText();
        String prenumee = tfPrenume.getText();
        String dataNasteree = tfData.getText();
        String nrTell = tfTel.getText();
        try {
            String[] d = dataNasteree.split("\\.");
            int zi = Integer.parseInt(d[0]);
            int luna = Integer.parseInt(d[1]);

            NrFix fix = new NrFix(nrTell);
            NrMobil mobil = new NrMobil(nrTell);
            Contact c1 = new Contact(numee, prenumee, dataNasteree, nrTell);
            if (persoane.contains(c1)) {
                JOptionPane.showMessageDialog(this, "contactul exista deja ");
            } else {
                if (numee.length() >= 2 && !numee.matches(".*[0-9].*") && !numee.contains(" ")) {
                    if (prenumee.length() >= 2 && !prenumee.matches(".*[0-9].*") && !prenumee.contains(" ")) {
                        if (dataNasteree.length() != 10 || dataNasteree.indexOf(".") != 2 || dataNasteree.lastIndexOf(".") != 5 || zi < 1 || zi > 31 || luna < 1 || luna > 12) {
                            JOptionPane.showMessageDialog(this, "Data nu corespunde");
                        } else {
                            if (nrTell.length() == 10 && !nrTell.matches(".*[a-zA-Z].*") && !nrTell.contains(" ")) {
                                try {
                                    if (cbFix.isSelected()) {
                                        fix.validareNumar();
                                        contacte.addElement(new Contact(numee, prenumee, dataNasteree, nrTell));
                                        persoane.add(new Contact(numee, prenumee, dataNasteree, nrTell));                                   
                                        //  Agenda dd = new Agenda();
                                        //     agenda.agenda.add(new Contact(numee, prenumee, dataNasteree, nrTell));
                                    } else if (cbMobil.isSelected()) {
                                        mobil.validareNumar();
                                        contacte.addElement(new Contact(numee, prenumee, dataNasteree, nrTell));
                                        persoane.add(new Contact(numee, prenumee, dataNasteree, nrTell));                           
                                        //   agenda.agenda.add(new Contact(numee, prenumee, dataNasteree, nrTell));
                                    }
                                } catch (NullPointerException e) {
                                    JOptionPane.showMessageDialog(this, "Numarul nu corespunde cu alegerea facuta");
                                }
                                if (dataNasteree.regionMatches(0, date, 0, 5)) {
                                    JOptionPane.showMessageDialog(this, "Contactul " + contacte.lastElement() + " isi serbeaza ziua de nastere azi");
                                }
                            } else {
                                JOptionPane.showMessageDialog(this, "Numarul nu corespunde");
                            }
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "Prenumele nu corespunde");
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Numele nu corespunde");
                }
                if (!cbFix.isSelected() && !cbMobil.isSelected()) {
                    JOptionPane.showMessageDialog(this, "Alege-ti tipul numarului");
                }
            }
        } catch (NumberFormatException | ArrayIndexOutOfBoundsException s) {
            JOptionPane.showMessageDialog(this, "Data nu corespunde");
        }
        refreshModel();
    }//GEN-LAST:event_AdaugaActionPerformed

    private void cbFixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbFixActionPerformed
        cbMobil.setSelected(false);
        JOptionPane.showMessageDialog(this, "Numerele fixe au prefixul '02' sau '03'", "Adaugati un numar fix", JOptionPane.NO_OPTION);
    }//GEN-LAST:event_cbFixActionPerformed

    private void cbMobilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMobilActionPerformed
        cbFix.setSelected(false);
        JOptionPane.showMessageDialog(this, "Numerele mobile au prefixul '07'", "Adaugati un numar mobil", JOptionPane.NO_OPTION);
    }//GEN-LAST:event_cbMobilActionPerformed

    private void bFiltruActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bFiltruActionPerformed
        filtrul = tfFiltru.getText();
        if (cmbFiltru.getSelectedIndex() > 0) {
            CriteriuFiltrare fil = (CriteriuFiltrare) cmbFiltru.getSelectedItem();
            if (fil == CriteriuFiltrare.Personalizat) {
                contacte.clear();
                persoane.stream().filter(p -> p.getNume().contains(filtrul) || p.getPrenume().contains(filtrul) || p.getTel().contains(filtrul))
                        .forEach(contacte::addElement);
            }
            if (fil == CriteriuFiltrare.DupaNumarFix) {
                contacte.clear();
                persoane.stream().filter(p -> p.getTel().startsWith("02") || p.getTel().startsWith("03")).forEach(contacte::addElement);
            }
            if (fil == CriteriuFiltrare.DupaNumarMobil) {
                contacte.clear();
                persoane.stream().filter(p -> p.getTel().startsWith("07")).forEach(contacte::addElement);
            }
            if (fil == CriteriuFiltrare.NascutiAstazi) {
                contacte.clear();
                persoane.stream().filter(p -> p.dataNastere.regionMatches(0, date, 0, 5)).forEach(contacte::addElement);
            }
            if (fil == CriteriuFiltrare.NascutiLunaCurenta) { // nu merge
                contacte.clear();
                for (int i = 0; i < persoane.size(); i++) {
                    String dataContact = persoane.get(i).getData();
                    String[] data = dataContact.split("\\.");
                    int ziContact = Integer.parseInt(data[0]);
                    int lunaContact = Integer.parseInt(data[1]);
                    if (ziCurenta < ziContact && lunaCurenta == lunaContact) {
                        persoane.stream().filter(p -> p.dataNastere.matches(dataContact)).forEach(contacte::addElement);
                    } else {
                    }
                }
            }
            tfFiltru.setText("");
        } else {
            actualizareModel();
        }
    }//GEN-LAST:event_bFiltruActionPerformed

    private void tfFiltruActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfFiltruActionPerformed
        bFiltruActionPerformed(evt);
    }//GEN-LAST:event_tfFiltruActionPerformed

    private void tfFiltruKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfFiltruKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            filtrul = "";
            tfFiltru.setText("");
            bFiltruActionPerformed(null);
        }
    }//GEN-LAST:event_tfFiltruKeyPressed

    private void btnOrdoneazaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrdoneazaActionPerformed
        if (cmbOrdonare.getSelectedIndex() > 0) {
            CriteriuOrdonare ord = (CriteriuOrdonare) cmbOrdonare.getSelectedItem();
            if (ord == CriteriuOrdonare.DupaNume) {
                Collections.sort(persoane, dupaNume);
                actualizareModel();
            }
            if (ord == CriteriuOrdonare.DupaPrenume) {
                Collections.sort(persoane, dupaPrenume);
                actualizareModel();
            }
            if (ord == CriteriuOrdonare.DupaData) {
                Collections.sort(persoane, dupaData);
                actualizareModel();
            }
            if (ord == CriteriuOrdonare.DupaNumar) {
                Comparator<Contact> c = cbFix.isSelected() ? dupaNumar.reversed() : dupaNumar;
                Collections.sort(persoane, c);
                actualizareModel();
            }
        } else {
            actualizareModel();
        }
    }//GEN-LAST:event_btnOrdoneazaActionPerformed

    private void btnEditeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditeActionPerformed
        if (Lista.isSelectionEmpty()) {
            JOptionPane.showMessageDialog(this, "Selectati un contact");
        } else {
            adauga.setVisible(true);
            adauga.setSize(300, 300);
            Adauga.setVisible(false);
            btnEditt.setVisible(true);
            int pozitie = Lista.getSelectedIndex();
            if (pozitie >= 0) {
                Contact contact = (Contact) persoane.get(pozitie);
                tfNume.setText(contact.getNume());
                tfPrenume.setText(contact.getPrenume());
                tfTel.setText(contact.getTel());
                if (contact.getTel().startsWith("07")) {
                    cbMobil.setSelected(true);
                    cbFix.setSelected(false);
                }
                if (contact.getTel().startsWith("02") || contact.getTel().startsWith("03")) {
                    cbMobil.setSelected(false);
                    cbFix.setSelected(true);
                }
            }
            tfData.setVisible(false);
            jData.setVisible(false);
        }
    }//GEN-LAST:event_btnEditeActionPerformed

    private void btnEdittActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEdittActionPerformed
        String numeNou = tfNume.getText();
        String prenumeNou = tfPrenume.getText();
        String nrTelNou = tfTel.getText();
        int pozitie = Lista.getSelectedIndex();
        Contact contact = (Contact) persoane.get(pozitie);
        NrFix fixx = new NrFix(nrTelNou);
        NrMobil mobill = new NrMobil(nrTelNou);

        if (numeNou.length() >= 2 && !numeNou.matches(".*[0-9].*") && !numeNou.contains(" ")) {
            if (prenumeNou.length() >= 2 && !prenumeNou.matches(".*[0-9].*") && !prenumeNou.contains(" ")) {
                if (nrTelNou.length() == 10 && !nrTelNou.matches(".*[a-zA-Z].*") && !nrTelNou.contains(" ")) {
                    try {
                        if (cbFix.isSelected()) {
                            fixx.validareNumar();
                            Contact c2 = new Contact(numeNou, prenumeNou, contact.dataNastere, nrTelNou);
                            persoane.set(pozitie, c2);
                            contacte.set(pozitie, c2);
                            actualizareModel();
                        } else if (cbMobil.isSelected()) {
                            mobill.validareNumar();
                            Contact c2 = new Contact(numeNou, prenumeNou, contact.dataNastere, nrTelNou);
                            persoane.set(pozitie, c2);
                            contacte.set(pozitie, c2);
                            actualizareModel();
                        }
                    } catch (NullPointerException e) {
                        JOptionPane.showMessageDialog(this, "Numarul nu corespunde cu alegerea facuta");
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Numarul nu corespunde");
                }

            } else {
                JOptionPane.showMessageDialog(this, "Prenumele nu corespunde");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Numele nu corespunde");
        }
    }//GEN-LAST:event_btnEdittActionPerformed

    private void miIesireActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miIesireActionPerformed

        int iesire = JOptionPane.showConfirmDialog(null, "Doriti sa parasiti aplicatia", "Iesire", JOptionPane.YES_NO_OPTION);
        if (iesire == JOptionPane.YES_OPTION) {
            System.exit(0);
        } else {
        }
    }//GEN-LAST:event_miIesireActionPerformed

    private void refreshModel() {
        tfNume.setText("");
        tfPrenume.setText("");
        tfData.setText("");
        cbFix.setSelected(false);
        cbMobil.setSelected(false);
        tfTel.setText("");
    }

    private void actualizareModel() {
        contacte.clear();
        for (Contact o : persoane) {
            contacte.addElement(o);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Proiect.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Proiect.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Proiect.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Proiect.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        SplashScreen sc = new SplashScreen();
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
             //   new ShareWare().setVisible(true);
                sc.setVisible(true);
            }
        });
        Proiect shareWare= new Proiect();
        try{
            Thread.sleep(1000);
        }catch(Exception e){
        }
        new SplashScreen().setVisible(false);
        shareWare.setVisible(true);
        sc.dispose();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Adauga;
    private javax.swing.JFrame Full;
    private javax.swing.JList Lista;
    private javax.swing.JFrame adauga;
    private javax.swing.JButton bFiltru;
    private javax.swing.JButton btnAdauga;
    private javax.swing.JButton btnEdite;
    private javax.swing.JButton btnEditt;
    private javax.swing.JButton btnOrdoneaza;
    private javax.swing.JButton btnRemove;
    private javax.swing.JRadioButton cbFix;
    private javax.swing.JRadioButton cbMobil;
    private javax.swing.JFileChooser chooser;
    private javax.swing.JComboBox<String> cmbFiltru;
    private javax.swing.JComboBox<String> cmbOrdonare;
    private javax.swing.JLabel jData;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lPic;
    private javax.swing.JMenuItem miAbout;
    private javax.swing.JMenuItem miExit;
    private javax.swing.JMenuItem miIesire;
    private javax.swing.JMenuItem miOpen;
    private javax.swing.JMenuItem miRegister;
    private javax.swing.JMenuItem miRegister1;
    private javax.swing.JMenuItem miSave;
    private javax.swing.JMenu register;
    private javax.swing.JTextField tfData;
    private javax.swing.JTextField tfFiltru;
    private javax.swing.JTextField tfNume;
    private javax.swing.JTextField tfPrenume;
    private javax.swing.JTextField tfTel;
    // End of variables declaration//GEN-END:variables
}
